#!/system/bin/sh

dir_ver=/data/local/binary
 file="$1"

 kernel_ver="$(busybox strings "$file" | busybox awk '/Linux version/  { print $3 }' | busybox head -1 | busybox awk -F"-" '{ print $1 }')" 2> /dev/null
 kernel_bit="$(busybox strings "$file" | busybox grep -Eo "arch/arm.." | busybox head -1 | busybox sed 's!/.!!2')" 2> /dev/null
 kernel_prop="$(busybox find ramdisk -maxdepth 1 -name "prop.default" -type f | busybox sed 's!^./!!')"
 if [ -s "$kernel_prop" ]; then
 kernel_bit3="$(busybox awk -F"=" '/ro.product.cpu.abilist64=arm64*/ { print $2 }' "$kernel_prop")"
 fi
 
 python39 "$dir_ver"/bin_system/find_gz.py "$file" "1f8b08"
 if [ -f "kernel.gz" ]; then
 busybox gunzip -f kernel.gz 2> /dev/null || busybox rm -f kernel.gz
 fi

 if [ ! -z "$kernel_ver" ]; then
 echo
 echo "...Kernel-Version: $kernel_ver"
 else
 #python39 "$dir_ver"/bin_system/find_gz.py "$file" "1f8b08"
 #if [ -f "kernel.gz" ]; then
 #busybox gunzip -f kernel.gz

 if [ -f "kernel" ]; then
 kernel_ver1="$(busybox strings kernel | busybox awk '/Linux version/  { print $3 }' | busybox head -1 | busybox awk -F"-" '{ print $1 }')"
 echo
 echo "...Kernel-Version: $kernel_ver1"
 fi
 fi
 #fi

 if [ ! -z "$kernel_bit" ]; then
 if [ "$kernel_bit" == "arch/arm64" ]; then
 echo "...Kernel: 64 bit"
 elif [ "$kernel_bit" == "arch/arm" ]; then
 echo "...Kernel: 32 bit"
 fi
 elif [ ! -z "$kernel_bit3" ]; then
 echo "...Kernel: 64 bit"
 else
 
 if [ -f "kernel" ]; then
 kernel_bit1="$(busybox strings kernel | busybox grep -Eo "arch/arm.." | busybox head -1 | busybox sed 's!/.!!2')"
 kernel_bit2="$(busybox strings kernel | busybox grep -Eo "Linux/arm.." | busybox head -1 | busybox sed 's!/.!!2')"
 if [ "$kernel_bit1" == "arch/arm64" -o "$kernel_bit2" == "Linux/arm64" ]; then
 echo "...Kernel: 64 bit"
 elif [ "$kernel_bit1" == "arch/arm" -o "$kernel_bit2" == "Linux/arm" ]; then
 echo "...Kernel: 32 bit"
 fi
 fi
 fi
   busybox rm -f kernel


